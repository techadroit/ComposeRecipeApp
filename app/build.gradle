plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id "org.jetbrains.kotlin.kapt"
    id "dagger.hilt.android.plugin"
}

android {
    compileSdkVersion 31
    buildToolsVersion "30.0.3"

    defaultConfig {

        configurations.all {
            resolutionStrategy { force 'androidx.core:core-ktx:1.7.0' }
        }

        applicationId "com.example.composerecipeapp"
        minSdkVersion 24
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        freeCompilerArgs += ["-P", "plugin:androidx.compose.compiler.plugins.kotlin:suppressKotlinVersionCompatibilityCheck=true"]
        jvmTarget = '1.8'
        useIR = true
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/AL2.0'
        exclude 'META-INF/INDEX.LIST'
        exclude("META-INF/*.kotlin_module")
        exclude 'project.properties'
        exclude 'META-INF/LGPL2.1'
    }
}

kapt {
    generateStubs = true
    correctErrorTypes true
}

dependencies {

    def room_version = "2.4.1"
    def okhttp_version = "4.8.0"
    def retrofit_version = "2.9.0"
    def preference_version = "1.2.0"
    def hilt_version = "2.36"

    implementation project(':archerviewmodel')
    implementation "androidx.preference:preference-ktx:$preference_version"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    // For Kotlin use kapt instead of annotationProcessor
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'

    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    testImplementation("com.squareup.okhttp3:mockwebserver:4.2.1")

    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.foundation:foundation:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling:$compose_version"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.0-alpha02'
    implementation "androidx.navigation:navigation-compose:2.5.0-alpha02"
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'
    implementation "androidx.datastore:datastore-preferences:1.0.0"
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.7'

    implementation "com.github.skydoves:landscapist-glide:1.2.2"
    implementation 'com.google.android.exoplayer:exoplayer:2.14.1'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"

    // Test rules and transitive dependencies:
    androidTestImplementation("androidx.compose.ui:ui-test-junit4:$compose_version")
// Needed for createComposeRule, but not createAndroidComposeRule:
    debugImplementation("androidx.compose.ui:ui-test-manifest:$compose_version")
    androidTestImplementation "io.mockk:mockk-android:1.12.1"
//    androidTestImplementation "com.google.dagger:hilt-android-testing:1.0.0-beta04"
//    kaptAndroidTest "com.google.dagger:hilt-android-compiler:1.0.0-beta04"
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.0'
    androidTestImplementation "io.mockk:mockk-android:1.12.1"
    testImplementation("io.mockk:mockk:1.12.2")

}
